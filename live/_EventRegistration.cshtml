@inherits Custom.Hybrid.Razor12
@using ToSic.Razor.Blade;
@{
  var fieldBuilder = CreateInstance("shared/FieldBuilder.cs");
  var course = AsList(App.Data["Event"])
  .FirstOrDefault(x => x.EntityId == System.Convert.ToInt32(Request.QueryString["cid"]));
  var eventDate = AsList(App.Data["EventDate"])
  .FirstOrDefault(ed => ed.EntityId == System.Convert.ToInt32(Request.QueryString["did"]));
  var resources = Resources;
  var title = course == null ? "" : course.Title;
  var page = GetService<ToSic.Sxc.Web.IPageService>(); // Service to set titles etc. on the page
  page.SetTitle(resources.CourseRegistrationTitle + " | " + title);

  var eventsDomId = "app-events6-" + @CmsContext.Module.Id;
}

@* Show warning if 404, event not found *@
@if (course == null)
{
  <div class="alert alert-danger" role="alert">
    <span class="sr-only">Error:</span>
    @resources.CourseNotFoundError
  </div>
}
else
{
  @* Show warning if App-Settings not configured *@
  if (!Text.Has(Settings.OwnerMail) || !Text.Has(Settings.MailFrom))
  {
    <div class="alert alert-warning" @Edit.TagToolbar()>
      @Html.Raw(resources.MessageDefaultMailSettings.Replace("<p>", "").Replace("</p>", ""))
    </div>
  }

  <div class="app-events6 app-events6-form" @Edit.TagToolbar(eventDate)
  data-string-required="@resources.ValidationRequired" data-string-email="@resources.ValidationEmail">
    @* Title *@
    <h1 class="mb-4">@resources.CourseRegistrationTitle - @course.Title @((!String.IsNullOrEmpty(eventDate.TitleAddition))
    ? resources.TitleAdditionPrefix + " " + eventDate.TitleAddition + " " + resources.TitleAdditionSuffix : "" )</h1>

    <div class="form app-events6-form @eventsDomId">
      @* Inputs *@
      @{
        var additionalTitle = !String.IsNullOrEmpty(eventDate.TitleAddition) ? " " + resources.TitleAdditionPrefix + " " +
          eventDate.TitleAddition + " " + resources.TitleAdditionSuffix : "";
        var inputTitle = Text.First(eventDate.Title, course.Title) + additionalTitle;
      }
      @fieldBuilder.Text(resources.LabelCourseNumber, true, true, ((eventDate.Id != null) ? eventDate.Id : course.id))
      @fieldBuilder.Text(resources.LabelCourseName, true, true, inputTitle)
      @fieldBuilder.Text(resources.LabelCourseLocation, true, true, Text.First(eventDate.Location, course.Location))

      @* @fieldBuilder.Textbox(resources.LabelCourseNumber, "CourseNumber", true, disabled: true, value: ((eventDate.Id !=
        null) ? eventDate.Id : course.id))
        @fieldBuilder.Textbox(resources.LabelCourseName, "CourseName", true, disabled: true, value: inputTitle )
        @fieldBuilder.Textbox(resources.LabelCourseLocation, "CourseLocation", true, disabled: true, value:
        Text.First(eventDate.Location, course.Location)) *@

      @* Event Notes *@
      @{
        var compDate = eventDate.Start.ToString("d") + ((eventDate.End != null) ? " - " + eventDate.End.ToString("d") : "");
      }
      @fieldBuilder.Multiline(resources.LabelCourseDate, true, true, (Text.Has(eventDate.TimeSpecifics) ?
    eventDate.TimeSpecifics : compDate))

      @* <div class="form-group row">
        @fieldBuilder.Label(resources.LabelCourseDate, "Date")
        <div class="col-sm-9">
        @{
        var compDate = eventDate.Start.ToString("d") + ((eventDate.End != null) ? " - " + eventDate.End.ToString("d") : "");
        }
        <textarea required class="form-control" id="Date" name="Date" disabled="disabled"
        rows="3">@(Text.Has(eventDate.TimeSpecifics) ? eventDate.TimeSpecifics : compDate)</textarea>
        </div>
        </div> *@

      @* Salutation *@
      <h3>@resources.CourseParticipantData</h3>
      <div class="form-group row">
        @fieldBuilder.Label(resources.LabelParticipantSalutation, "Salutation", true)
        <div class="col-sm-9">
          <div class="radio">
            <label>
              <input name="Salutation" type="radio" value="@resources.LabelMrs">
              @resources.LabelMrs
            </label>
          </div>
          <div class="radio">
            <label>
              <input name="Salutation" type="radio" value="@resources.LabelMr">
              @resources.LabelMr
            </label>
          </div>

        </div>
      </div>

      @* Inputs *@
      @* @fieldBuilder.Textbox(resources.LabelParticipantFirstName, "FirstName", true)
        @fieldBuilder.Textbox(resources.LabelParticipantLastName, "LastName", true)
        @fieldBuilder.Textbox(resources.LabelParticipantStreet, "Street")
        @fieldBuilder.Textbox(resources.LabelParticipantZIPCity, "ZIPCity") *@
      @fieldBuilder.Text(resources.LabelParticipantFirstName, true)
      @fieldBuilder.Text(resources.LabelParticipantLastName, true)
      @fieldBuilder.Text(resources.LabelParticipantStreet, true)
      @fieldBuilder.Text(resources.LabelParticipantZIPCity, true)


      @* Country Select *@
      @fieldBuilder.DropDown("Country", true, resources.CountrySelection.Split('\n'))

      @* <div class="form-group row form-required">
        @fieldBuilder.Label(resources.LabelParticipantCountry, "Country")
        <div class="col-sm-9">
        <select class="form-control" id="Country" name="Country" required>
        <option value="">@resources.PleaseSelectCountry</option>
        @foreach(var country in resources.CountrySelection.Split('\n')) {
        <option value="@country">@country</option>
        }
        </select>
        </div>
        </div> *@

      @* @fieldBuilder.Textbox(resources.LabelParticipantPhone, "Phone")
        @fieldBuilder.Textbox(resources.LabelParticipantMobilePhone, "MobilePhone")
        @fieldBuilder.Textbox(resources.LabelParticipantMail, "Mail", true, "email")
      *@
      @* Inputs *@
      @fieldBuilder.Text(resources.LabelParticipantPhone, false)
      @fieldBuilder.Text(resources.LabelParticipantMobilePhone, false)
      @fieldBuilder.EMail(resources.LabelParticipantMail, true)


      @* Privacy/Terms Checkbox *@
      <div class="form-group row form-required">
        <label class="col-sm-3" for="AGB">@resources.AppAgbLabel</label>
        <div class="col-sm-9">
          <div class="form-check">
            <label class="form-check-label">
              <input type="checkbox" class="form-check-input" id="AGB" name="AGB" required />
              @Html.Raw(resources.AcceptAgb.Replace("<p>", "").Replace("</p>", ""))
            </label>
          </div>
        </div>
      </div>

      <div class="form-group row form-required">
        <label class="col-sm-3" for="Accept">@resources.AppCostsLabel</label>
        <div class="col-sm-9">
          <div class="form-check">
            <label class="form-check-label">
              <input type="checkbox" class="form-check-input" id="Accept" name="Accept" required />
              @Html.Raw(resources.AcceptCosts.Replace("<p>", "").Replace("</p>", ""))
            </label>
          </div>
        </div>
      </div>

      @* Submit Button *@
      <div class="form-group row">
        <div class="col-md-9 offset-sm-3" )>
          <button type="button" class="btn-send-events-form btn btn-primary">@Html.Raw(resources.ButtonRegister)</button>
        </div>
      </div>

      <input type="hidden" id="EventDateEntity" name="EventDateEntity" value="@eventDate.EntityGuid">
      <input type="hidden" id="Course" name="Course" value="@course.EntityGuid">
    </div>

    @* Response Messages *@
    <div class="form-info-error alert alert-danger" style="display:none;">
      @Resources.CourseRegistrationError
    </div>
    @* <div id="msgIncomplete" class="alert alert-danger mobius-message" role="alert">
      @Html.Raw(Resources.MessageFormIncomplete.Replace("<p>", "").Replace("</p>", ""))</div>
    <div id="msgError" class="alert alert-danger mobius-message" role="alert">
      @Html.Raw(Resources.MessageSendError.Replace("<p>", "").Replace("</p>", ""))</div>
    <div id="msgSending" class="alert alert-warning mobius-message" role="alert">
      @Html.Raw(Resources.MessageSending.Replace("<p>", "").Replace("</p>", ""))</div>
    <div id="msgNewsletterSuccess" class="alert alert-success mobius-message">@Resources.MessageNewsletterSuccess</div>
    <div id="msgNewsletterFailed" class="alert alert-danger mobius-message">@Resources.MessageNewsletterUnexpectedError</div> *@
    <div id="msgOk" class="alert alert-success mobius-message" role="alert">
      <strong>@Html.Raw(Resources.SuccessThanks)</strong>
      @Html.Raw(Resources.SuccessMessage)
    </div>
  </div>
}

@Html.Partial("shared/_Assets.cshtml")