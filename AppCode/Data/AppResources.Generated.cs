// DO NOT MODIFY THIS FILE - IT IS AUTO-GENERATED
// See also: https://go.2sxc.org/copilot-data
// To extend it, create a "AppResources.cs" with this contents:
/*
namespace AppCode.Data
{
  public partial class AppResources
  {
    // Add your own properties and methods here
  }
}
*/

// Generator:   CSharpDataModelsGenerator v17.06.02
// App/Edition: Events, Courses and Registration/
// User:        2sic Web-Developer
// When:        2024-04-08 09:26:47Z
using ToSic.Sxc.Adam;

namespace AppCode.Data
{
  // This is a generated class for AppResources (scope: System.App)
  // To extend/modify it, see instructions above.

  /// <summary>
  /// AppResources data. <br/>
  /// Generated 2024-04-08 09:26:47Z. Re-generate whenever you change the ContentType. <br/>
  /// <br/>
  /// Default properties such as `.Title` or `.Id` are provided in the base class. <br/>
  /// Most properties have a simple access, such as `.AddNewEvent`. <br/>
  /// For other properties or uses, use methods such as
  /// .IsNotEmpty("FieldName"), .String("FieldName"), .Children(...), .Picture(...), .Html(...).
  /// </summary>
  /// <remarks>
  /// This Content-Type is NOT in the default scope, so you may not see it in the Admin UI. It's in the scope System.App.
  /// </remarks>
  public partial class AppResources: AutoGenerated.ZagAppResources
  {  }
}

namespace AppCode.Data.AutoGenerated
{
  /// <summary>
  /// Auto-Generated base class for System.App.AppResources in separate namespace and special name to avoid accidental use.
  /// </summary>
  public abstract class ZagAppResources: Custom.Data.CustomItem
  {
    /// <summary>
    /// AddNewEvent as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("AddNewEvent", scrubHtml: true) etc.
    /// </summary>
    public string AddNewEvent => _item.String("AddNewEvent", fallback: "");

    /// <summary>
    /// AddNewEventDate as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("AddNewEventDate", scrubHtml: true) etc.
    /// </summary>
    public string AddNewEventDate => _item.String("AddNewEventDate", fallback: "");

    /// <summary>
    /// AllDatesOfThisEvent as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("AllDatesOfThisEvent", scrubHtml: true) etc.
    /// </summary>
    public string AllDatesOfThisEvent => _item.String("AllDatesOfThisEvent", fallback: "");

    /// <summary>
    /// BtnToggleExpiredDate as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("BtnToggleExpiredDate", scrubHtml: true) etc.
    /// </summary>
    public string BtnToggleExpiredDate => _item.String("BtnToggleExpiredDate", fallback: "");

    /// <summary>
    /// ButtonRegister as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("ButtonRegister", scrubHtml: true) etc.
    /// </summary>
    public string ButtonRegister => _item.String("ButtonRegister", fallback: "");

    /// <summary>
    /// CountrySelection as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("CountrySelection", scrubHtml: true) etc.
    /// </summary>
    public string CountrySelection => _item.String("CountrySelection", fallback: "");

    /// <summary>
    /// CourseData as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("CourseData", scrubHtml: true) etc.
    /// </summary>
    public string CourseData => _item.String("CourseData", fallback: "");

    /// <summary>
    /// CourseNotFoundError as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("CourseNotFoundError", scrubHtml: true) etc.
    /// </summary>
    public string CourseNotFoundError => _item.String("CourseNotFoundError", fallback: "");

    /// <summary>
    /// CourseRegistrationError as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("CourseRegistrationError", scrubHtml: true) etc.
    /// </summary>
    public string CourseRegistrationError => _item.String("CourseRegistrationError", fallback: "");

    /// <summary>
    /// CourseRegistrationTitle as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("CourseRegistrationTitle", scrubHtml: true) etc.
    /// </summary>
    public string CourseRegistrationTitle => _item.String("CourseRegistrationTitle", fallback: "");

    /// <summary>
    /// DateTime as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("DateTime", scrubHtml: true) etc.
    /// </summary>
    public string DateTime => _item.String("DateTime", fallback: "");

    /// <summary>
    /// DetailsLink as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("DetailsLink", scrubHtml: true) etc.
    /// </summary>
    public string DetailsLink => _item.String("DetailsLink", fallback: "");

    /// <summary>
    /// EventSettings as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("EventSettings", scrubHtml: true) etc.
    /// </summary>
    public string EventSettings => _item.String("EventSettings", fallback: "");

    /// <summary>
    /// Fee as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("Fee", scrubHtml: true) etc.
    /// </summary>
    public string Fee => _item.String("Fee", fallback: "");

    /// <summary>
    /// LabelAcceptAgb as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("LabelAcceptAgb", scrubHtml: true) etc.
    /// </summary>
    public string LabelAcceptAgb => _item.String("LabelAcceptAgb", fallback: "");

    /// <summary>
    /// LabelAcceptCosts as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("LabelAcceptCosts", scrubHtml: true) etc.
    /// </summary>
    public string LabelAcceptCosts => _item.String("LabelAcceptCosts", fallback: "");

    /// <summary>
    /// LabelAddEvent as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("LabelAddEvent", scrubHtml: true) etc.
    /// </summary>
    public string LabelAddEvent => _item.String("LabelAddEvent", fallback: "");

    /// <summary>
    /// LabelAppAgb as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("LabelAppAgb", scrubHtml: true) etc.
    /// </summary>
    public string LabelAppAgb => _item.String("LabelAppAgb", fallback: "");

    /// <summary>
    /// LabelAppCosts as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("LabelAppCosts", scrubHtml: true) etc.
    /// </summary>
    public string LabelAppCosts => _item.String("LabelAppCosts", fallback: "");

    /// <summary>
    /// LabelBack as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("LabelBack", scrubHtml: true) etc.
    /// </summary>
    public string LabelBack => _item.String("LabelBack", fallback: "");

    /// <summary>
    /// LabelBackToList as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("LabelBackToList", scrubHtml: true) etc.
    /// </summary>
    public string LabelBackToList => _item.String("LabelBackToList", fallback: "");

    /// <summary>
    /// LabelBirthDate as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("LabelBirthDate", scrubHtml: true) etc.
    /// </summary>
    public string LabelBirthDate => _item.String("LabelBirthDate", fallback: "");

    /// <summary>
    /// LabelCountry as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("LabelCountry", scrubHtml: true) etc.
    /// </summary>
    public string LabelCountry => _item.String("LabelCountry", fallback: "");

    /// <summary>
    /// LabelCourseDate as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("LabelCourseDate", scrubHtml: true) etc.
    /// </summary>
    public string LabelCourseDate => _item.String("LabelCourseDate", fallback: "");

    /// <summary>
    /// LabelCourseLocation as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("LabelCourseLocation", scrubHtml: true) etc.
    /// </summary>
    public string LabelCourseLocation => _item.String("LabelCourseLocation", fallback: "");

    /// <summary>
    /// LabelCourseName as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("LabelCourseName", scrubHtml: true) etc.
    /// </summary>
    public string LabelCourseName => _item.String("LabelCourseName", fallback: "");

    /// <summary>
    /// LabelCourseNumber as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("LabelCourseNumber", scrubHtml: true) etc.
    /// </summary>
    public string LabelCourseNumber => _item.String("LabelCourseNumber", fallback: "");

    /// <summary>
    /// LabelEventNotExists as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("LabelEventNotExists", scrubHtml: true) etc.
    /// </summary>
    public string LabelEventNotExists => _item.String("LabelEventNotExists", fallback: "");

    /// <summary>
    /// LabelEventNotExistsText as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("LabelEventNotExistsText", scrubHtml: true) etc.
    /// </summary>
    public string LabelEventNotExistsText => _item.String("LabelEventNotExistsText", fallback: "");

    /// <summary>
    /// LabelFirstName as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("LabelFirstName", scrubHtml: true) etc.
    /// </summary>
    public string LabelFirstName => _item.String("LabelFirstName", fallback: "");

    /// <summary>
    /// LabelLastName as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("LabelLastName", scrubHtml: true) etc.
    /// </summary>
    public string LabelLastName => _item.String("LabelLastName", fallback: "");

    /// <summary>
    /// LabelMail as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("LabelMail", scrubHtml: true) etc.
    /// </summary>
    public string LabelMail => _item.String("LabelMail", fallback: "");

    /// <summary>
    /// LabelMobilePhone as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("LabelMobilePhone", scrubHtml: true) etc.
    /// </summary>
    public string LabelMobilePhone => _item.String("LabelMobilePhone", fallback: "");

    /// <summary>
    /// LabelMr as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("LabelMr", scrubHtml: true) etc.
    /// </summary>
    public string LabelMr => _item.String("LabelMr", fallback: "");

    /// <summary>
    /// LabelMrs as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("LabelMrs", scrubHtml: true) etc.
    /// </summary>
    public string LabelMrs => _item.String("LabelMrs", fallback: "");

    /// <summary>
    /// LabelNationality as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("LabelNationality", scrubHtml: true) etc.
    /// </summary>
    public string LabelNationality => _item.String("LabelNationality", fallback: "");

    /// <summary>
    /// LabelParticipantTitle as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("LabelParticipantTitle", scrubHtml: true) etc.
    /// </summary>
    public string LabelParticipantTitle => _item.String("LabelParticipantTitle", fallback: "");

    /// <summary>
    /// LabelPhone as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("LabelPhone", scrubHtml: true) etc.
    /// </summary>
    public string LabelPhone => _item.String("LabelPhone", fallback: "");

    /// <summary>
    /// LabelPleaseSelect as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("LabelPleaseSelect", scrubHtml: true) etc.
    /// </summary>
    public string LabelPleaseSelect => _item.String("LabelPleaseSelect", fallback: "");

    /// <summary>
    /// LabelReadMore as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("LabelReadMore", scrubHtml: true) etc.
    /// </summary>
    public string LabelReadMore => _item.String("LabelReadMore", fallback: "");

    /// <summary>
    /// LabelRegistrations as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("LabelRegistrations", scrubHtml: true) etc.
    /// </summary>
    public string LabelRegistrations => _item.String("LabelRegistrations", fallback: "");

    /// <summary>
    /// LabelRequired as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("LabelRequired", scrubHtml: true) etc.
    /// </summary>
    public string LabelRequired => _item.String("LabelRequired", fallback: "");

    /// <summary>
    /// LabelStreet as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("LabelStreet", scrubHtml: true) etc.
    /// </summary>
    public string LabelStreet => _item.String("LabelStreet", fallback: "");

    /// <summary>
    /// LabelValidEmail as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("LabelValidEmail", scrubHtml: true) etc.
    /// </summary>
    public string LabelValidEmail => _item.String("LabelValidEmail", fallback: "");

    /// <summary>
    /// LabelZIPCity as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("LabelZIPCity", scrubHtml: true) etc.
    /// </summary>
    public string LabelZIPCity => _item.String("LabelZIPCity", fallback: "");

    /// <summary>
    /// LanguageHidden as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("LanguageHidden", scrubHtml: true) etc.
    /// </summary>
    public string LanguageHidden => _item.String("LanguageHidden", fallback: "");

    /// <summary>
    /// Location as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("Location", scrubHtml: true) etc.
    /// </summary>
    public string Location => _item.String("Location", fallback: "");

    /// <summary>
    /// MailCustomerBody as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("MailCustomerBody", scrubHtml: true) etc.
    /// </summary>
    public string MailCustomerBody => _item.String("MailCustomerBody", fallback: "");

    /// <summary>
    /// MailCustomerSubject as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("MailCustomerSubject", scrubHtml: true) etc.
    /// </summary>
    public string MailCustomerSubject => _item.String("MailCustomerSubject", fallback: "");

    /// <summary>
    /// MailOwnerIntroduction as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("MailOwnerIntroduction", scrubHtml: true) etc.
    /// </summary>
    public string MailOwnerIntroduction => _item.String("MailOwnerIntroduction", fallback: "");

    /// <summary>
    /// MailOwnerSubject as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("MailOwnerSubject", scrubHtml: true) etc.
    /// </summary>
    public string MailOwnerSubject => _item.String("MailOwnerSubject", fallback: "");

    /// <summary>
    /// Management as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("Management", scrubHtml: true) etc.
    /// </summary>
    public string Management => _item.String("Management", fallback: "");

    /// <summary>
    /// MessageContainsRecaptcha as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("MessageContainsRecaptcha", scrubHtml: true) etc.
    /// </summary>
    public string MessageContainsRecaptcha => _item.String("MessageContainsRecaptcha", fallback: "");

    /// <summary>
    /// MessageDefaultMailSettings as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("MessageDefaultMailSettings", scrubHtml: true) etc.
    /// </summary>
    public string MessageDefaultMailSettings => _item.String("MessageDefaultMailSettings", fallback: "");

    /// <summary>
    /// MessageRecaptchaMissing as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("MessageRecaptchaMissing", scrubHtml: true) etc.
    /// </summary>
    public string MessageRecaptchaMissing => _item.String("MessageRecaptchaMissing", fallback: "");

    /// <summary>
    /// MessageRecaptchaWarning as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("MessageRecaptchaWarning", scrubHtml: true) etc.
    /// </summary>
    public string MessageRecaptchaWarning => _item.String("MessageRecaptchaWarning", fallback: "");

    /// <summary>
    /// MessageSending as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("MessageSending", scrubHtml: true) etc.
    /// </summary>
    public string MessageSending => _item.String("MessageSending", fallback: "");

    /// <summary>
    /// NoCoursesFound as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("NoCoursesFound", scrubHtml: true) etc.
    /// </summary>
    public string NoCoursesFound => _item.String("NoCoursesFound", fallback: "");

    /// <summary>
    /// NoEventDates as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("NoEventDates", scrubHtml: true) etc.
    /// </summary>
    public string NoEventDates => _item.String("NoEventDates", fallback: "");

    /// <summary>
    /// PlaceHolderImg as link (url). <br/>
    /// To get the underlying value like 'file:72' use String("PlaceHolderImg")
    /// </summary>
    public string PlaceHolderImg => _item.Url("PlaceHolderImg");

    /// <summary>
    /// Get the file object for PlaceHolderImg - or null if it's empty or not referencing a file.
    /// </summary>
    public IFile PlaceHolderImgFile => _item.File("PlaceHolderImg");

    /// <summary>
    /// Get the folder object for PlaceHolderImg.
    /// </summary>
    public IFolder PlaceHolderImgFolder => _item.Folder("PlaceHolderImg");

    /// <summary>
    /// SalutationLabel as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("SalutationLabel", scrubHtml: true) etc.
    /// </summary>
    public string SalutationLabel => _item.String("SalutationLabel", fallback: "");

    /// <summary>
    /// Seats as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("Seats", scrubHtml: true) etc.
    /// </summary>
    public string Seats => _item.String("Seats", fallback: "");

    /// <summary>
    /// StatusCanceled as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("StatusCanceled", scrubHtml: true) etc.
    /// </summary>
    public string StatusCanceled => _item.String("StatusCanceled", fallback: "");

    /// <summary>
    /// StatusFullyBooked as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("StatusFullyBooked", scrubHtml: true) etc.
    /// </summary>
    public string StatusFullyBooked => _item.String("StatusFullyBooked", fallback: "");

    /// <summary>
    /// SuccessMessage as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("SuccessMessage", scrubHtml: true) etc.
    /// </summary>
    public string SuccessMessage => _item.String("SuccessMessage", fallback: "");

    /// <summary>
    /// SuccessThanks as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("SuccessThanks", scrubHtml: true) etc.
    /// </summary>
    public string SuccessThanks => _item.String("SuccessThanks", fallback: "");

    /// <summary>
    /// TitleAdditionPrefix as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("TitleAdditionPrefix", scrubHtml: true) etc.
    /// </summary>
    public string TitleAdditionPrefix => _item.String("TitleAdditionPrefix", fallback: "");

    /// <summary>
    /// TitleAdditionSuffix as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("TitleAdditionSuffix", scrubHtml: true) etc.
    /// </summary>
    public string TitleAdditionSuffix => _item.String("TitleAdditionSuffix", fallback: "");

    /// <summary>
    /// ValidationEmail as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("ValidationEmail", scrubHtml: true) etc.
    /// </summary>
    public string ValidationEmail => _item.String("ValidationEmail", fallback: "");

    /// <summary>
    /// ValidationRequired as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("ValidationRequired", scrubHtml: true) etc.
    /// </summary>
    public string ValidationRequired => _item.String("ValidationRequired", fallback: "");
  }
}